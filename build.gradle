import net.researchgate.release.GitAdapter

import java.util.regex.Matcher

buildscript {
    ext.kotlin_version = '1.1.4-2'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'com.github.kt3k.coveralls' version '2.8.1'
    id 'org.standardout.versioneye' version '1.4.0'
    id 'net.researchgate.release' version '2.4.0'
}

apply plugin: 'kotlin'
apply plugin: 'jacoco'
apply plugin: 'idea'

group = 'com.mercateo'
version = '0.1.0-SNAPSHOT'

description = """json-schema"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.7.9"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled false
    }
}

release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true
    preCommitText = ''
    preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
    tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
    tagTemplate = '${version}'
    versionPropertyFile = 'gradle.properties'
    versionProperties = []
    buildTasks = ['build']
    versionPatterns = [
            /(\d+)([^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}${m[0][2]}") }
    ]
    scmAdapters = [
            GitAdapter
    ]

    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = false
    }
}

def jackson_version = '2.8.8'

dependencies {
    compile group: 'com.googlecode.gentyref', name: 'gentyref', version: '1.2.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jackson_version
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jackson_version
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile(group: 'javax.validation', name: 'validation-api', version: '1.1.0.Final') {
        exclude(module: 'testng')
    }
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.8.0'
    testCompile group: 'com.nhaarman', name: 'mockito-kotlin-kt1.1', version: '1.5.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.8.47'
    testCompile group: 'org.openjdk.jmh', name: 'jmh-core', version: '1.19'
    testCompile group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.19'
    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test', version: kotlin_version
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
